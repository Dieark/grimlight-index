{"version":3,"file":"js/abyss.6f3b9d5c.js","mappings":"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","sources":["webpack://grimlight-index/./src/store/Spine.js","webpack://grimlight-index/./src/views/AbyssView.vue","webpack://grimlight-index/./src/components/AbyssTower.vue","webpack://grimlight-index/./src/components/AbyssTower.vue?b547","webpack://grimlight-index/./src/views/AbyssView.vue?44e7"],"sourcesContent":["/* eslint-disable */\r\nimport { defineStore, storeToRefs } from \"pinia\"\r\nimport { useInitUnit } from '@/store/InitUnit'\r\n\r\nexport const useSpine = defineStore('spine', {\r\n    state: () => {\r\n        const { unit } = storeToRefs(useInitUnit())\r\n        return {\r\n            unit:unit,\r\n            isSpine:false,\r\n            players:[],\r\n        }\r\n    },\r\n    actions: {\r\n        setSpine(id, skin) {\r\n            const node = document.getElementById(id);\r\n            node.innerHTML = '';\r\n            this.player = new spine.SpinePlayer(id, {\r\n                jsonUrl: `spine/${skin}.json`,\r\n                atlasUrl: `spine/${skin}.atlas`,\r\n                backgroundColor: \"#00000000\",\r\n                defaultMix: 0.4,\r\n                animation:\"idle\",\r\n                showControls: false,\r\n                premultipliedAlpha: true,\r\n                alpha: true,\r\n                viewport: {\r\n                    debugRender: false,\r\n                    transitionTime: 1,\r\n                    // x: -750, //big:left, small:right\r\n                    // y: -50, //big:down, small:up\r\n                    // width: 750,\r\n                    // height: 750 // -800, 0, 1600, 1600\r\n                    // padTop: \"100%\",\r\n                    // padBottom: \"100%\",\r\n                    // padRight: \"5%\",\r\n                    // padLeft: \"5%\"\r\n                }\r\n            })\r\n        },\r\n        setSpine_SD() {\r\n            console.log(this.unit.SD.slice().reverse())\r\n            this.unit.SD.slice().reverse().forEach((item, index) => {\r\n                console.log(item)\r\n                if (item != null){\r\n                    this.setSpine(`spine_SD_${this.unit.SD.length - index - 1}`, item)\r\n                    this.players.push(this.player)\r\n                }\r\n            });\r\n        },\r\n        changeAnimation(ani) {\r\n            this.players.forEach((item, index) => {\r\n                item.animationState.setAnimation(0, ani, true, 0)\r\n                item.animationState.addAnimation(0, 'idle', true, 3)\r\n            })\r\n        },\r\n        storyUse(skin, id) {\r\n            const node = document.getElementById(id);\r\n            if (skin == \"\") {\r\n                node.innerHTML = '';\r\n            }else{\r\n                node.innerHTML = '';\r\n                this.player = new spine.SpinePlayer(id, {\r\n                    jsonUrl: `spine/${skin}.json`,\r\n                    atlasUrl: `spine/${skin}.atlas`,\r\n                    backgroundColor: \"#00000000\",\r\n                    showControls: false,\r\n                    premultipliedAlpha: true,\r\n                    alpha: true,\r\n                    viewport: {\r\n                        debugRender: false,\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    },\r\n})","<template>\r\n    <div class=\"container\">\r\n        <AbyssTower/>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable */\r\nimport { ref, watch } from 'vue'\r\nimport { useWeapon } from '@/store/Weapon'\r\nimport { useLanguage } from '@/store/Language'\r\nimport AbyssTower from '@/components/AbyssTower.vue'\r\nimport { storeToRefs } from 'pinia'\r\n\r\nexport default {\r\n    name: 'EquipmentView',\r\n    components: {\r\n        AbyssTower,\r\n    },\r\n    setup() {\r\n        const { language } = storeToRefs(useLanguage())\r\n        useLanguage().changeLanguage()\r\n        watch(language, (nV) => {\r\n            useLanguage().changeLanguage()\r\n            useWeapon().changeLanguage(nV)\r\n        })\r\n    }\r\n}\r\n</script>\r\n\r\n","<template>\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-md-8 offset-md-auto col-10\">\r\n            <table class=\"table table-bordered table-light\" style=\"transform: skewX(45deg); opacity: 50%;\">\r\n                <tbody>\r\n                    <tr>\r\n                        <th scope=\"row\"></th>\r\n                        <td><div></div></td>\r\n                        <td><div></div></td>\r\n                        <td><div></div></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\"></th>\r\n                        <td><div></div></td>\r\n                        <td><div></div></td>\r\n                        <td><div></div></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\"></th>\r\n                        <td><div></div></td>\r\n                        <td><div></div></td>\r\n                        <td><div></div></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable */\r\nimport { watch, onUpdated, onMounted } from 'vue'\r\nimport { useMobile } from \"@/store/Mobile\"\r\nimport { useInitUnit } from \"@/store/InitUnit\"\r\nimport { useLanguage } from '@/store/Language'\r\nimport { useSpine } from \"@/store/Spine\"\r\nimport { storeToRefs } from 'pinia'\r\n\r\nexport default {\r\n    name: 'AbyssTower',\r\n    setup() {\r\n        const { isMobile } = storeToRefs(useMobile())\r\n        const { language } = storeToRefs(useLanguage())\r\n        const { isSpine } = storeToRefs(useSpine())\r\n        const { unit } = storeToRefs(useInitUnit())\r\n\r\n        const setSpine = (id) => {\r\n            useSpine().setSpine(id, unit.value.Fullbody[0])\r\n            isSpine.value = !isSpine.value\r\n        }\r\n\r\n        onMounted(() => {\r\n            useSpine().setSpine_SD()\r\n        })\r\n        onUpdated(() => {\r\n            useSpine().setSpine_SD()\r\n        })\r\n\r\n        return {\r\n            language,\r\n            isMobile,\r\n            isSpine,\r\n            unit,\r\n            setSpine,\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\ntable {\r\n    table-layout:fixed;\r\n    text-align: center;\r\n}\r\ntd {\r\n  position: relative;\r\n}\r\n\r\ntd > div {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n}\r\n\r\ntd:before {\r\n  content: \"\";\r\n  display: block;\r\n  padding-top: 33%;\r\n}\r\n</style>\r\n","import { render } from \"./AbyssTower.vue?vue&type=template&id=6b9611e3&scoped=true\"\nimport script from \"./AbyssTower.vue?vue&type=script&lang=js\"\nexport * from \"./AbyssTower.vue?vue&type=script&lang=js\"\n\nimport \"./AbyssTower.vue?vue&type=style&index=0&id=6b9611e3&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\Dieark\\\\vue-app\\\\grimlight-index\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6b9611e3\"]])\n\nexport default __exports__","import { render } from \"./AbyssView.vue?vue&type=template&id=4fa80202\"\nimport script from \"./AbyssView.vue?vue&type=script&lang=js\"\nexport * from \"./AbyssView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\Dieark\\\\vue-app\\\\grimlight-index\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["useSpine","defineStore","state","unit","storeToRefs","useInitUnit","isSpine","players","actions","setSpine","id","skin","node","document","getElementById","innerHTML","this","player","spine","SpinePlayer","jsonUrl","atlasUrl","backgroundColor","defaultMix","animation","showControls","premultipliedAlpha","alpha","viewport","debugRender","transitionTime","setSpine_SD","console","log","SD","slice","reverse","forEach","item","index","length","push","changeAnimation","ani","animationState","setAnimation","addAnimation","storyUse","class","_createElementBlock","_hoisted_1","_createVNode","_component_AbyssTower","_hoisted_2","name","setup","isMobile","useMobile","language","useLanguage","value","Fullbody","onMounted","onUpdated","__exports__","components","AbyssTower","changeLanguage","watch","nV","useWeapon","render"],"sourceRoot":""}